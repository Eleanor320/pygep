#summary If anyone were asking questions, they'd probably be asking these...
#labels Phase-Implementation,Featured

= Frequently Asked Questions =
==== How can I write my own GEP functions? ====
Simple: 
{{{
from pygep.chromosome import symbol

@symbol('~')
def foo(x, y, z):
    return bar(x, y, z)
}}}

Now you can use `foo` in your chromosomes just like any of the provided functions.  If your function uses a single character name, you do not need to use the `symbol` decorator.  The arity of non-terminal functions is culled from its `func_code.co_argcount`, meaning that using `*args` or `**kwds` will _not_ do anything.

See `pygep.functions` for examples.

==== Can I provide my own linkers? ====
Of course!  A PyGEP linker just needs to accept `*args` and return a single result.  See the `sum_linker` code for an example:
{{{
def sum_linker(*args):
    '''Returns the sum of all sub-ETs'''
    return sum(args)
}}}

If you do not provide a linker for your population, the default linker will simply return the top results of each gene's evaluation.
